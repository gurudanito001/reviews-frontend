{"version":3,"sources":["config.js","logo.svg","components/login.js","components/register.js","components/createReview.js","components/navbar.js","components/reviews.js","components/homepage.js","components/pendingValidation.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","serverUrl","Login","props","onSubmit","e","preventDefault","console","log","state","axios","post","then","res","data","errors","setErrors","token","saveUserLocalStorage","decoded","jwt_decode","setCurrentUser","document","getElementById","click","onChange","setState","target","id","value","email","password","className","tabIndex","aria-labelledby","aria-hidden","type","data-dismiss","aria-label","htmlFor","this","onClick","React","Component","firstname","lastname","password2","admin","CreateReview","reviewText","review","author","currentUser","validated","sending","defaultValue","maxLength","rows","disabled","Navbar","to","href","data-toggle","data-target","aria-controls","aria-expanded","logUserOut","Reviews","componentDidMount","get","reviews","map","style","minWidth","maxWidth","_id","Homepage","PendingValidation","fetchUnvalidatedReviews","discardReview","delete","validateReview","App","setCurrentUserFromLocalStorage","userDetails","localStorage","getItem","setItem","clear","err","displayErrors","Object","values","role","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c9a72f32.chunk.js","sourcesContent":["module.exports = {\r\n    serverUrl: \"https://immense-escarpment-51849.herokuapp.com/api\"\r\n}","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from 'react';\r\nimport { serverUrl } from '../config';\r\nimport axios from 'axios';\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport default class Login extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\"\r\n        }\r\n    }\r\n\r\n    onSubmit = (e)=>{\r\n        e.preventDefault()\r\n        console.log(this.state)\r\n        axios.post(`${serverUrl}/user/login`, this.state)\r\n            .then(res => {\r\n                if(res.data.errors){\r\n                    this.props.setErrors(res.data.errors)\r\n                }else{\r\n                    const { token } = res.data;\r\n                    this.props.saveUserLocalStorage(token)\r\n                    const decoded = jwt_decode(token)\r\n                    this.props.setCurrentUser(decoded);\r\n                    console.log(decoded) \r\n                    document.getElementById(\"closeLoginModal\").click()\r\n                }\r\n            })\r\n    }\r\n\r\n    onChange = (e)=>{\r\n        this.setState({ [e.target.id]: e.target.value })\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n\r\n            <div className=\"modal fade\" id=\"LoginModal\" tabIndex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog  modal-dialog-centered modal-dialog-scrollable\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\" id=\"exampleModalLabel\">Login</h5>\r\n                            <button id=\"closeLoginModal\" type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"email\">Email address</label>\r\n                                    <input type=\"email\" className=\"form-control\" id=\"email\" onChange={this.onChange}/>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"password\">Password</label>\r\n                                    <input type=\"password\" className=\"form-control\" id=\"password\" onChange={this.onChange} />\r\n                                </div>\r\n                            </form> \r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" onClick={this.onSubmit}>Submit</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { serverUrl } from '../config';\r\nimport axios from 'axios';\r\n\r\nexport default class Login extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            firstname: \"\",\r\n            lastname: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            password2: \"\",\r\n            admin: false\r\n        }\r\n    }\r\n\r\n    onSubmit = (e)=>{\r\n        e.preventDefault()\r\n        axios.post(`${serverUrl}/user/register`, this.state)\r\n            .then(res => {\r\n                if(res.data.errors){\r\n                    this.props.setErrors(res.data.errors)\r\n                }else{\r\n                    document.getElementById(\"closeRegisterModal\").click()\r\n                }\r\n            })\r\n    }\r\n\r\n    \r\n\r\n    onChange = (e)=>{\r\n        this.setState({ [e.target.id]: e.target.value })\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n\r\n            <div className=\"modal fade\" id=\"RegisterModal\" tabIndex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog  modal-dialog-centered modal-dialog-scrollable\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\" id=\"exampleModalLabel\">Register</h5>\r\n                            <button id=\"closeRegisterModal\" type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"firstname\">Firstname</label>\r\n                                    <input type=\"text\" className=\"form-control form-control-sm\" id=\"firstname\" onChange={this.onChange}/>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"lastname\">Lastname</label>\r\n                                    <input type=\"text\" className=\"form-control form-control-sm\" id=\"lastname\" onChange={this.onChange} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"email\">Email address</label>\r\n                                    <input type=\"email\" className=\"form-control form-control-sm\" id=\"email\" onChange={this.onChange} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"password\">Password</label>\r\n                                    <input type=\"password\" className=\"form-control form-control-sm\" id=\"password\" onChange={this.onChange} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"password2\">Confirm Password</label>\r\n                                    <input type=\"password\" className=\"form-control form-control-sm\" id=\"password2\" onChange={this.onChange} />\r\n                                </div>\r\n                            </form> \r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" onClick={this.onSubmit}>Submit</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { serverUrl } from '../config';\r\nimport axios from 'axios';\r\n\r\nexport default class CreateReview extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            sending: false,\r\n            reviewText: \"\",\r\n        }\r\n    }\r\n\r\n    onChange = (e)=>{\r\n        this.setState({ [e.target.id]: e.target.value})\r\n    }\r\n\r\n    onSubmit = (e)=>{\r\n        e.preventDefault();\r\n        if(this.state.reviewText){\r\n            let { reviewText } = this.state\r\n            let review = {\r\n                reviewText, \r\n                author: this.props.currentUser.firstname + \" \" + this.props.currentUser.lastname, \r\n                validated: this.props.currentUser.admin}\r\n            console.log(review)\r\n            this.setState({ sending: true })\r\n            axios.post(`${serverUrl}/review/add`, review)\r\n                .then(res => {\r\n                    this.setState({ sending: false })\r\n                    document.getElementById(\"closeReviewModal\").click()\r\n                })\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n\r\n            <div className=\"modal fade\" id=\"createReviewModal\" tabIndex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog  modal-dialog-centered modal-dialog-scrollable\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\" id=\"exampleModalLabel\">Create Review</h5>\r\n                            <button id=\"closeReviewModal\" type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            {this.props.currentUser.firstname ? \r\n                            <form>\r\n                                <div className=\"form-group row\">\r\n                                    <label htmlFor=\"author\" className=\"col-sm-2 col-form-label\">Author</label>\r\n                                    <div className=\"col-sm-10\">\r\n                                        <input type=\"text\" className=\"form-control-plaintext\" id=\"author\"  \r\n                                        defaultValue={\"\" + this.props.currentUser.firstname + \" \" + this.props.currentUser.lastname } />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"reviewText\">Review Text</label>\r\n                                    <textarea className=\"form-control\" id=\"reviewText\" maxLength=\"150\" rows=\"3\" onChange={this.onChange}></textarea>\r\n                                </div>\r\n                            </form> :\r\n                            <h6 className=\"text-danger\"> Please Login to create a review </h6>}\r\n                             \r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" disabled={this.state.sending} onClick={this.onSubmit}>Submit</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nconst Navbar = (props)=>{\r\n    return(\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light mb-4 sticky-top\">\r\n            <Link to=\"/reviews-frontend/\" className=\"navbar-brand font-weight-bold\" href=\"#\">Reviews Application</Link>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item active\">\r\n                        <Link to=\"/reviews-frontend/reviews\" className=\"nav-link\">Reviews</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/reviews-frontend/pendingValidation\" className=\"nav-link\" href=\"#\">Pending Validation</Link>\r\n                    </li>\r\n                </ul>\r\n\r\n                <button className=\"btn btn-sm btn-secondary mr-1 ml-auto\" data-toggle=\"modal\" data-target=\"#createReviewModal\">Create Review</button>\r\n                <button className=\"btn btn-sm btn-info mr-1\" data-toggle=\"modal\" data-target=\"#RegisterModal\">Register</button>\r\n\r\n                {props.currentUser.firstname ? <button className=\"btn btn-sm btn-danger\" onClick={props.logUserOut}>Logout</button> :\r\n                <button className=\"btn btn-sm btn-success\" data-toggle=\"modal\" data-target=\"#LoginModal\">Login</button>}\r\n                \r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React, { Fragment } from 'react';\r\nimport axios from 'axios';\r\nimport { serverUrl } from '../config';\r\n\r\nexport default class Reviews extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            reviews: []\r\n        }\r\n    }\r\n\r\n    componentDidMount = ()=>{\r\n        axios.get(`${serverUrl}/review/getValidated`)\r\n            .then(res => {\r\n                if(res.data){\r\n                    this.setState({ reviews: res.data })\r\n                }\r\n            })\r\n    }\r\n\r\n    reviews = ()=>{\r\n        return this.state.reviews.map(review =>{\r\n            return (\r\n                <Fragment key={review._id}>\r\n                    <div className=\"card mb-3\" style={{minWidth: \"18rem\", maxWidth: \"18rem\"}}>\r\n                        <div className=\"card-body\">\r\n                            <span className=\"mr-2\">Author:</span><span className=\"card-subtitle mb-2 text-muted\">{review.author}</span>\r\n                            <label className=\"d-block mt-3 mb-1\">Review</label> <hr className=\"mt-0\"/>\r\n                            <p className=\"card-text\">{review.reviewText}</p>\r\n                        </div>\r\n                    </div>\r\n                </Fragment>\r\n            )\r\n        })\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n            <h4 className=\"mb-3\">Reviews</h4>\r\n            <div className=\"card-deck\">\r\n                {this.reviews()}\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst Homepage = ()=>{\r\n    return(\r\n        <div>\r\n            <header>\r\n                <h4>Welcome to my review web application</h4>\r\n            </header>\r\n\r\n            <div className=\"jumbotron\">\r\n                <p>This web application was built as an interview test for Bimbi Philips Limited</p>\r\n                <p>This was done in a hurry. So please be gentle with your scrutiny 🙏</p>\r\n                <p>Thank you for your consideration</p>\r\n                    <br/>\r\n                <div>\r\n                    <header>\r\n                        <h4>Instructions</h4>\r\n                    </header>\r\n\r\n                    <p className=\"bg-white d-inline-block p-2\">\r\n                        To have full privileges, Login as an admin<br/>\r\n                        email: admin@gmail.com<br/>\r\n                        password: administrator\r\n                    </p>\r\n\r\n                    <header>\r\n                        <h4>Features</h4>\r\n                    </header>\r\n\r\n                    <p>\r\n                        <strong>Admin has the following privileges</strong> <br/>\r\n                        Create Review (Admin Reviews will not need validation)<br/>\r\n                        View Reviews <br/>\r\n                        Discard / Validate Reviews <br/>\r\n                        Login / Register <br/>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <strong>Users will have the following privileges</strong> <br/>\r\n                        Create Review (User Reviews will be subject to validation by admin)<br/>\r\n                        View Reviews <br/>\r\n                        Login / Register \r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Homepage","import React, { Fragment } from 'react';\r\nimport axios from 'axios';\r\nimport { serverUrl } from '../config';\r\n\r\nexport default class PendingValidation extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            reviews: []\r\n        }\r\n    }\r\n\r\n    componentDidMount = ()=>{\r\n        this.fetchUnvalidatedReviews()\r\n    }\r\n\r\n    fetchUnvalidatedReviews = ()=>{\r\n        axios.get(`${serverUrl}/review/getUnvalidated`)\r\n        .then(res => {\r\n            if(res.data){\r\n                this.setState({ reviews: res.data })\r\n            }\r\n        })\r\n    }\r\n\r\n    discardReview = (id)=>{\r\n        axios.delete(`${serverUrl}/review/delete/${id}`)\r\n        .then(res => {\r\n            if(res.data){\r\n                this.fetchUnvalidatedReviews()\r\n            }\r\n        })\r\n    }\r\n\r\n    validateReview = (id)=>{\r\n        axios.post(`${serverUrl}/review/validate/${id}`)\r\n        .then(res => {\r\n            if(res.data){\r\n                this.fetchUnvalidatedReviews()\r\n            }\r\n        })\r\n    }\r\n\r\n    reviews = ()=>{\r\n        return this.state.reviews.map(review =>{\r\n            return (\r\n                <Fragment key={review._id}>\r\n                    <div className=\"card\" style={{minWidth: \"18rem\", maxWidth: \"18rem\"}}>\r\n                        <div className=\"card-body\">\r\n                            <span className=\"mr-2\">Author:</span><span className=\"card-subtitle mb-2 text-muted\">{review.author}</span>\r\n                            <label className=\"d-block mt-3 mb-1\">Review</label> <hr className=\"mt-0\"/>\r\n                            <p className=\"card-text\">{review.reviewText}</p>\r\n                            <button className=\"card-link btn btn-sm btn-danger\" onClick={()=>{this.discardReview(review._id)}}>Discard</button>\r\n                            <button className=\"card-link btn btn-sm btn-success\" onClick={()=>{this.validateReview(review._id)}}>Validate</button>\r\n                        </div>\r\n                    </div>\r\n                </Fragment>\r\n            )\r\n        })\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n            <h4 className=\"mb-3\">Pending Validation</h4>\r\n            <div className=\"card-deck\">\r\n                {this.props.currentUser.admin ? this.reviews(): \r\n                <h6 className=\"text-danger\"> Sorry!! Only an Admin can access this page</h6>}\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Login from './components/login';\nimport Register from './components/register';\nimport CreateReview from './components/createReview';\nimport Navbar from './components/navbar';\nimport Reviews from './components/reviews';\nimport Homepage from './components/homepage';\nimport PendingValidation from './components/pendingValidation';\nimport jwt_decode from \"jwt-decode\";\n\nexport default class App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      errors: {},\n      currentUser: {}\n    }\n  }\n  componentDidMount = ()=>{\n    this.setCurrentUserFromLocalStorage()\n  }\n  setCurrentUser = (userDetails)=>{\n    this.setState({ currentUser: userDetails })\n  }\n\n  setCurrentUserFromLocalStorage = ()=>{\n    let token = localStorage.getItem(\"jwtToken\");\n    if(token){\n      const decoded = jwt_decode(token);\n      this.setState({currentUser: decoded})\n      console.log(token)\n    }\n  }\n\n  saveUserLocalStorage = (token)=>{\n    localStorage.setItem( \"jwtToken\", token )\n  }\n\n  logUserOut = ()=>{\n    this.setState({ currentUser: {}}, console.log(this.state))\n    localStorage.clear()\n  }\n\n  setErrors = (err)=>{\n    this.setState({errors: err})\n  }\n  displayErrors = ()=>{\n    let errors = Object.values(this.state.errors);\n    return errors.map(err => {\n        return(\n          <div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\" style={{maxWidth: \"300px\"}}>\n            <strong>{err}!</strong>\n            <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n        )\n    });\n  }\n\n  \n\n  render(){\n    return(\n        <Router>\n          <Navbar \n          logUserOut={this.logUserOut}\n          currentUser={this.state.currentUser}\n          />\n          <div className=\"container\">\n            {this.displayErrors()}\n            <Switch>\n              <Route path=\"/reviews-frontend/\" exact component={Homepage} />\n              <Route path=\"/reviews-frontend/reviews\" exact component={Reviews} />\n              <Route path=\"/reviews-frontend/pendingValidation\">\n                 <PendingValidation \n                 currentUser={this.state.currentUser}/>\n              </Route>\n            </Switch>\n          </div>\n          \n          <Login \n            saveUserLocalStorage={this.saveUserLocalStorage}\n            setCurrentUser={this.setCurrentUser } \n            setErrors={this.setErrors}/>\n          <Register \n          setErrors={this.setErrors}/>\n          <CreateReview \n          currentUser={this.state.currentUser}/>\n        </Router>\n    )\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}